Redmine command line interface and some Git related extras
==========================================================

See <script> -h for invocation details.

redupdate
---------
Create or update Redmine issues via the command line.
Works with a remote Redmine server if you have SSH access,
or locally on the Redmine server itself.
Assumes a standard Debian installation in /usr/share/redmine.
It's a shell script, so there are no undocumented Ruby-dependencies!

redupload
---------
Uploads a file into a Redmine project.
Uses Perl, Term::Readkey and WWW::Mechanize; on Debian install packages
perl, libterm-readkey-perl, libwww-mechanize-perl, respectively.

redlist
-------
List Redmine issues in plain text format, optionally filtered for a project.
See FILES for column-filtering via the ~/.redgit file.
Uses Perl and curl; on Debian install packages perl and curl, respectively.

redshow
-------
Pretty print a Redmine issue in plain text format.
Uses Perl and curl; on Debian install packages perl and curl, respectively.

miner
-----
A daemon to query each branch of the Repository of a Redmine project
periodically, one branch every 15s.
Uses curl.
Benefits:
* keeps Redmine alive, no sluggish response times
* the issue-commit links are kept up to date, whithout having to check the Repo
Start from /etc/rc.local as a daemon:
miner <project> &

gitemail
--------
Meant to be called from the post-receive hook of a git repo, to inform the
maintainer about pushes. Needs mutt to send emails.

gitcreate
---------
Creates a bare git repo, sets up its post-update hook for http access and,
if an email address is specified, sets up a gitemail call into the
post-receive hook.

Typical usage:
$ gitcreate foo bar@baz.com
This will create the bare repo foo.git in the current dir, set up http access,
and install gitemail into the post-receive hook to notify the maintainer
about pushes.

git-addsubtree
--------------
Add a subproject as a subtree merge from URL specified on command line.
The subproject will be represented by a remote with the same name
and checked out into a subdirectory with the same name as the subproject.

git-pullsubtree
---------------
Pull changes from a branch of a subtree-merged subproject.

make install copies both above scripts to /usr/lib/git-core, so they are
available as git subcommands, like "git addsubtree <URL>" and
"git pullsubtree <subpj> <branch>".

FILES
=====

~/.redgit
---------
Configuration file in ini-format, do not use superfluous whitspace apart from
empty lines. Do not use comments like in the example below:

[redgit]
http=foo.bar/redmine  # Redmine URL, allows omitting it in redlist redshow and redupload
ssh=johndoe@foo.bar   # SSH access for redupdate
[redlist]
filter=Description    # Do not show Description column
only=#                # If ANY only key is present, only those columns are shown
only=Tracker
only=Subject
only=Status
